<!---
LICENSE INFORMATION:

Copyright 2007, Joe Rinehart
 
Licensed under the Apache License, Version 2.0 (the "License"); you may not 
use this file except in compliance with the License. 

You may obtain a copy of the License at 

	http://www.apache.org/licenses/LICENSE-2.0 
	
Unless required by applicable law or agreed to in writing, software distributed
under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR 
CONDITIONS OF ANY KIND, either express or implied. See the License for the 
specific language governing permissions and limitations under the License.

VERSION INFORMATION:

This file is part of Model-Glue Model-Glue: ColdFusion (2.0.304).

The version number in parenthesis is in the format versionNumber.subversion.revisionNumber.
--->


<!doctype HTML public "-//W3C//DTD HTML 4.0 Frameset//EN">

<html>

<head>
<title>Quickstart 4: Handling a Form</title>
<meta http-equiv="content-type" content="text/html; charset=windows-1252">
<meta name="generator" content="RoboHelp by eHelp Corporation www.ehelp.com">
<link rel="stylesheet" href="../default_ns.css"><script type="text/javascript" language="JavaScript" title="WebHelpSplitCss">
<!--
if (navigator.appName !="Netscape")
{   document.write("<link rel='stylesheet' href='../default.css'>");}
//-->
</script>
<style type="text/css">
<!--
p.whs1 { margin-left:40px; }
p.whs2 { margin-left:80px; }
p.whs3 { margin-left:0px; }
p.whs4 { margin-left:120px; }
-->
</style><script type="text/javascript" language="JavaScript">
<!--
if ((navigator.appName == "Netscape") && (parseInt(navigator.appVersion) == 4))
{
  var strNSS = "<style type='text/css'>";
  strNSS += "p.whs3 {margin-left:1pt; }";
  strNSS +="</style>";
  document.write(strNSS);
}
//-->
</script>
<script type="text/javascript" language="JavaScript" title="WebHelpInlineScript">
<!--
function reDo() {
  if (innerWidth != origWidth || innerHeight != origHeight)
     location.reload();
}
if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
	origWidth = innerWidth;
	origHeight = innerHeight;
	onresize = reDo;
}
onerror = null; 
//-->
</script>
<style type="text/css">
<!--
div.WebHelpPopupMenu { position:absolute; left:0px; top:0px; z-index:4; visibility:hidden; }
-->
</style><script type="text/javascript" language="javascript1.2" src="../whmsg.js"></script>
<script type="text/javascript" language="javascript" src="../whver.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whproxy.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whutils.js"></script>
<script type="text/javascript" language="javascript1.2" src="../whtopic.js"></script>
</head>
<body><script type="text/javascript" language="javascript1.2">
<!--
if (window.gbWhTopic)
{
	if (window.addTocInfo)
	{
	addTocInfo("Quickstart\nQuickstart 4: Handling a Form");
addButton("show",BTN_TEXT,"Show","","","","",0,0,"","","");

	}
	if (window.writeBtnStyle)
		writeBtnStyle();

	if (window.writeIntopicBar)
		writeIntopicBar(1);

	if (window.setRelStartPage)
	{
	setRelStartPage("../Model-Glue.htm");
addSearchFormHref("javascript:document.ehelpform.submit()");

		autoSync(1);
		sendSyncInfo();
		sendAveInfoOut();
	}
}
else
	if (window.gbIE4)
		document.location.reload();
//-->
</script>
<h1>Quickstart 4: Handling a Form</h1>

<p>Ok, we've built a form. &nbsp;It 
 submits to an event handler named &quot;translationFormAction.&quot; &nbsp;Now, 
 we need to create that event.</p>

<p>&nbsp;</p>

<p>Let's do it now. &nbsp;Add 
 the following new event handler XML to /translator/config/ModelGlue.xml:</p>

<p>&nbsp;</p>

<p>&lt;event-handler name=&quot;translationFormAction&quot;&gt;</p>

<p>&lt;/event-handler&gt;</p>

<p>&nbsp;</p>

<p>Ok, fire up a browser, go to http://localhost/translator/index.cfm?event=transationForm, 
 fill in a phrase, and click Ok.</p>

<p>&nbsp;</p>

<p>Not much happened, eh? &nbsp;</p>

<p>&nbsp;</p>

<p>Obviously, we need to tell the application to translate the phrase that's 
 been entered. &nbsp;Our 
 first step is to add a message to the translationFormAction. &nbsp;A 
 message is like a town crier: &nbsp;it's 
 the event handler's way of saying &quot;I need the phrase to be translated!&quot; 
 &nbsp;The event 
 handler itself doesn't care who does the translation.</p>

<p>&nbsp;</p>

<p>Let's add the message:</p>

<p>&nbsp;</p>

<p>&lt;event-handler name=&quot;translationFormAction&quot;&gt;</p>

<p class="whs1">&lt;broadcasts&gt;</p>

<p class="whs2">&lt;message name=&quot;NeedTranslation&quot; 
 /&gt;</p>

<p class="whs1">&lt;/broadcasts&gt;</p>

<p>&lt;/event-handler&gt;</p>

<p>&nbsp;</p>

<p>Try the form again if you like. &nbsp;Still 
 nothing. &nbsp;That's 
 because the event handler can ask for translations until it's blue in 
 the face (or view), but nothing's going to happen unless something <span 
 style="font-style: italic;"><I>listens</I></span> to the message.</p>

<p>&nbsp;</p>

<p>At the top of ModelGlue.xml, there's a &lt;controllers&gt; block we 
 haven't talked about yet. &nbsp;It 
 declares a list of &lt;controllers&gt;, which in turn contain a list of 
 &lt;message-listeners&gt;.</p>

<p>&nbsp;</p>

<p>It sounds complicated, but it isn't. &nbsp;</p>

<p>&nbsp;</p>

<p>You'll see that each &lt;controller&gt; tag has a TYPE attribute. &nbsp;That 
 attribute points to a CFC known as a &quot;Controller CFC&quot;. &nbsp;When 
 Model-Glue starts, it creates an instance of each Controller CFC listed.</p>

<p>&nbsp;</p>

<p>The &lt;message-listener&gt; tags simply tell the controller &quot;Whenever 
 an event handler broadcasts a message named MESSAGE, execute your function 
 named FUNCTION.&quot; &nbsp;</p>

<p>&nbsp;</p>

<p>So, to get something to translate, we need to tell our Controller to 
 listen for the NeedTranslation message. &nbsp;Add 
 a new &lt;message-listener&gt; tag to the default &lt;controller&gt; block, 
 making it look like this:</p>

<p>&nbsp;</p>

<p>&lt;controller name=&quot;MyController&quot; type=&quot;modelglueapplicationtemplate.controller.Controller&quot;&gt;</p>

<p class="whs1">&lt;message-listener message=&quot;OnRequestStart&quot; 
 function=&quot;OnRequestStart&quot; /&gt;</p>

<p class="whs1">&lt;message-listener message=&quot;OnRequestEnd&quot; 
 function=&quot;OnRequestEnd&quot; /&gt;</p>

<p class="whs1">&lt;message-listener message=&quot;NeedTranslation&quot; 
 function=&quot;TranslatePhrase&quot; /&gt;</p>

<p>&lt;/controller&gt;</p>

<p>&nbsp;</p>

<p>Ok, now try the form. &nbsp;Again.</p>

<p>&nbsp;</p>

<p>Still nothing? &nbsp;There's 
 one last piece to the puzzle: &nbsp;write 
 a TranslatePhrase function in the Controller that asks our Model to translate 
 a phrase! &nbsp;That's 
 easy enough - just open /translator/controller/Controller.cfc and add 
 the following &lt;cffunction&gt;:</p>

<p>&nbsp;</p>

<p>&lt;cffunction name=&quot;TranslatePhrase&quot; access=&quot;public&quot; 
 returntype=&quot;void&quot; output=&quot;false&quot;&gt;</p>

<p class="whs1">&lt;cfargument name=&quot;event&quot; type=&quot;any&quot;&gt;</p>

<p class="whs1">&nbsp;</p>

<p class="whs1">&lt;cfset var translator = createObject(&quot;component&quot;, 
 &quot;translator.model.PigLatinTranslator&quot;).init(&quot;aeiou&quot;) 
 /&gt;</p>

<p class="whs1">&lt;cfset var phrase = arguments.event.getValue(&quot;phrase&quot;) 
 /&gt;</p>

<p class="whs1">&lt;cfset var result = translator.translate(phrase) 
 /&gt;</p>

<p class="whs1">&nbsp;</p>

<p class="whs1">&lt;cfset arguments.event.trace(&quot;TranslatePhrase 
 Results&quot;, result) /&gt;</p>

<p class="whs1">&lt;cfset arguments.event.setValue(&quot;translatedPhrase&quot;, 
 result) /&gt;</p>

<p>&lt;/cffunction&gt;</p>

<p>&nbsp;</p>

<p>So what does all that do?</p>

<p>&nbsp;</p>

<p>First, arguments.event is like the twin sibling of the viewstate variable 
 in a view. &nbsp;It 
 has a getValue() method to get variables from the FORM and URL scopes. 
 &nbsp;However, 
 it also has a setValue() method that can set values into the viewstate, 
 readable in views or later message listener functions.</p>

<p>&nbsp;</p>

<p>Second, it creates an instance of our application's Model CFC:</p>

<p class="whs1">&nbsp;</p>

<p class="whs3">&lt;cfset var translator = createObject(&quot;component&quot;, 
 &quot;translator.model.PigLatinTranslator&quot;).init(&quot;aeiou&quot;) 
 /&gt;</p>

<p>&nbsp;</p>

<p>Third, it gets the value of FORM.phrase </p>

<p>&nbsp;</p>

<p class="whs3">&lt;cfset var phrase = arguments.event.getValue(&quot;phrase&quot;) 
 /&gt;</p>

<p class="whs3">&nbsp;</p>

<p class="whs3">Fourth, it asks the model to translate the 
 phrase:</p>

<p class="whs3">&nbsp;</p>

<p class="whs3">&lt;cfset var result = translator.translate(phrase) 
 /&gt;</p>

<p class="whs3">&nbsp;</p>

<p class="whs3">Fifth, it adds the results of the translation 
 to the Model-Glue debugging output, so that we can see that it's been 
 translated properly:</p>

<p class="whs3">&nbsp;</p>

<p class="whs3">&lt;cfset arguments.event.trace(&quot;TranslatePhrase 
 Results&quot;, result) /&gt;</p>

<p class="whs3">&nbsp;</p>

<p class="whs3">Last, it sets the results of the translation 
 into the viewstate so that our view templates can display the data:</p>

<p class="whs3">&nbsp;</p>

<p class="whs3">&lt;cfset arguments.event.setValue(&quot;translatedPhrase&quot;, 
 result) /&gt;</p>

<p>&nbsp;</p>

<p>Ok, finally, run the form! &nbsp;Seriously, 
 something will happen this time! &nbsp;You 
 won't get much, but you'll see a line in the Model-Glue debugging trace 
 labelled &quot;TranslatePhrase Results&quot; that shows the translated 
 phrase.</p>

<p>&nbsp;</p>

<p>As a last step, let's add a view that shows our translated phrase. &nbsp;That'd 
 probably make users happy, because we'll turn the debugging trace off 
 when we deploy this application.</p>

<p>&nbsp;</p>

<p>Following the same steps as we did when we built the form, first add 
 a dspPhrase.cfm file to /translator/views. &nbsp;You'll 
 notice that we again use an eXit Event, this time &nbsp;to 
 build a link back to the translation form. &nbsp;To 
 the link, we append the &quot;phrase&quot; value. &nbsp;If 
 you look back at frmPhrase.cfm, the VALUE attribute of our &lt;cfinput&gt; 
 tag was set to viewstate.getValue(&quot;phrase&quot;). &nbsp;getValue(), 
 by default, returns an empty string if a value is not defined. &nbsp;By 
 appending the phrase to the URL, we can set the default value of the input 
 box.</p>

<p>&nbsp;</p>

<p>&lt;cfset translationForm = viewstate.getValue(&quot;myself&quot;) &amp; 
 viewstate.getValue(&quot;xe.translationForm&quot;) &amp; &quot;&amp;phrase=&quot; 
 &amp; viewstate.getValue(&quot;phrase&quot;) /&gt;</p>

<p>&lt;cfset translatedPhrase = viewstate.getValue(&quot;translatedPhrase&quot;) 
 /&gt;</p>

<p>&nbsp;</p>

<p>&lt;cfoutput&gt;</p>

<p>&nbsp;</p>

<p>Translated Phrase: #translatedPhrase#</p>

<p>&lt;br /&gt;</p>

<p>&lt;a href=&quot;#translationForm#&quot;&gt;Translate Again.&lt;/a&gt;</p>

<p>&nbsp;</p>

<p>&lt;/cfoutput&gt;</p>

<p>&nbsp;</p>

<p>Second, tell the event handler to &lt;include&gt; the view:</p>

<p>&nbsp;</p>

<p>&lt;event-handler name=&quot;translationFormAction&quot;&gt;</p>

<p class="whs1">&lt;broadcasts&gt;</p>

<p class="whs2">&lt;message name=&quot;NeedTranslation&quot; 
 /&gt;</p>

<p class="whs1">&lt;/broadcasts&gt;</p>

<p class="whs1">&lt;views&gt;</p>

<p class="whs2">&lt;include name=&quot;body&quot; template=&quot;dspPhrase.cfm&quot;&gt;</p>

<p class="whs4">&lt;value name=&quot;xe.translationForm&quot; 
 value=&quot;translationForm&quot; /&gt;</p>

<p class="whs2">&lt;/include&gt;</p>

<p class="whs1"><span style="margin-left: 80px;">&lt;/views&gt;</span></p>

<p>&lt;/event-handler&gt;</p>

<p>&nbsp;</p>

<p>Wow. &nbsp;You 
 now know about half of Model-Glue. &nbsp;There's 
 really only another quarter or so that's fundamental knowledge, and the 
 remaining bit after that is just icing on the cake that you'll use every 
 now and then.</p>

<p class="whs3">&nbsp;</p>

<p>&nbsp;</p>

<p>&nbsp;</p>

<script type="text/javascript" language="javascript1.2">
<!--
if (window.writeIntopicBar)
	writeIntopicBar(0);
//-->
</script>
<form method="POST" action="http://www.helpcommunity.com/ehelpapi.asp?cmd=WebSave" name="ehelpform" target="_top" style="display:'none';">
<input type="hidden" name="data" value
</form>
</body>
</html>
